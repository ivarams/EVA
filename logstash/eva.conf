# vi: set ft=conf:

filter {
    grok {
        match => {
            "short_message" => "%{NUMBER:timestamp} eva (?<log_level>(DEBUG|INFO|WARNING|ERROR|CRITICAL)) (?<marathon_app_id>(/[A-Za-z0-9/_-]+)) %{NOTSPACE:mesos_task_id} %{GREEDYDATA:eva_message}"
        }
        add_tag => [ "eva" ]
    }
    grok {
        match => {
            "eva_message" => "\[%{UUID:job_id}\] %{GREEDYDATA}"
            "tag" => "eva"
        }
        add_tag => [ "eva-job" ]
    }
    grok {
        match => {
            "eva_message" => "Setting job status to (?<eva_job_status>(INITIALIZED|STARTED|COMPLETE|FAILED))"
            "tag" => "eva-job"
        }
        add_tag => [ "eva-job-status" ]
    }
    grok {
        match => {
            "eva_message" => "^Starting EVA"
            "tag" => "eva"
        }
        add_tag => [ "eva-start" ]
    }
    grok {
        match => {
            "eva_message" => "^Shutting down EVA"
            "tag" => "eva"
        }
        add_tag => [ "eva-shutdown" ]
    }
    date {
        match => ["timestamp", "UNIX_MS"]
        remove_field => ["timestamp"]
    }
}
output {
    if "eva" in [tags] {
        statsd {
            namespace => "eva"
            sender => ""
            count => [
                "log,marathon_app_id=%{marathon_app_id},log_level=%{log_level}", 1
            ]
        }
    }
    if "eva-job-status" in [tags] {
        statsd {
            namespace => "eva"
            sender => ""
            count => [
                "job,marathon_app_id=%{marathon_app_id},eva_status=%{eva_job_status}", 1
            ]
        }
    }
    if "eva-start" in [tags] {
        statsd {
            namespace => "eva"
            sender => ""
            count => [
                "start,marathon_app_id=%{marathon_app_id}", 1
            ]
        }
    }
    if "eva-shutdown" in [tags] {
        statsd {
            namespace => "eva"
            sender => ""
            count => [
                "shutdown,marathon_app_id=%{marathon_app_id}", 1
            ]
        }
    }
}
