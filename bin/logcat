#!/usr/bin/env python

import kafka
import argparse
import uuid
import json


class Message(object):
    def __init__(self, data):
        self.json = json.loads(data)

    def valid(self):
        return 'eva' in self.json['tags']

    def name(self):
        return self.json['marathon_app_id']

    def text(self):
        return self.json['short_message']


if __name__ == '__main__':
    helptext = "This utility concatenates EVA logs from a Kafka server, and outputs them to stdout."

    parser = argparse.ArgumentParser(description=helptext)
    parser.add_argument('--broker', type=unicode, action='append', required=True,
                        help='Which broker to publish the message to. Can be specified multiple times.')
    parser.add_argument('--topic', type=unicode, default='mesos.logstash',
                        help='The Kafka topic to which log events are published.')
    args = parser.parse_args()

    consumer = kafka.KafkaConsumer(args.topic,
                                   bootstrap_servers=args.broker,
                                   client_id=unicode(uuid.uuid4()),
                                   value_deserializer=lambda m: Message(m))

    try:
        while True:
            message = consumer.next().value
            if not message.valid():
                continue
            output = '%(name)s: %(text)s' % {
                'name': message.name(),
                'text': message.text(),
            }
            print output
    except KeyboardInterrupt:
        pass
